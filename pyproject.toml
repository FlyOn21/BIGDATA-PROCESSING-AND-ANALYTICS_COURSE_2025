[project]
name = "bigdata-processing-and-analytics-course-2025"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "confluent-kafka>=2.11.1",
    "dbt-core>=1.10.9",
    "dbt-postgres>=1.9.0",
    "factory-boy>=3.3.3",
    "faker>=37.6.0",
    "kafka-python>=2.2.15",
    "pydantic>=2.11.7",
    "pyspark==3.5.2",
    "pytest>=8.4.2",
    "python-snappy>=0.7.3",
    "ruff>=0.12.5",
    "snowflake>=1.7.0",
    "snowflake-snowpark-python>=1.36.0",
    "tqdm>=4.67.1",
]
[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "venv",
    "docker",
    "alembic",
    "alembic.ini",
    "alembic/versions",
    "be_common_sub",
    "config",
    "tests",
    "tests/*"
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "N", # pep8-naming
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = ["F401",
    "E501",
    "E101",
    "E402",
    "F403", # do not use wildcard imports
    "F405",
    "F821",
    "UP035",
    "B008", # do not perform function calls in argument defaults
    "B904", # raise without from inside except
    "B006", # ignore defoult mitable array use
    "W191", # indentation contains tabs (conflicts with format.indent-style="tab")
    "STR100"  # use of str.format() (conflicts with format.quote-style="single")
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["app"]
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
strict = true
ignore_missing_imports = true
exclude = [".venv", "tests", ".databricks"]
